<Project>
  <!-- Project information -->
  <PropertyGroup>
    <Product>Quibble</Product>
    <Authors>Alex Noddings</Authors>
    <Company>Alex Noddings</Company>
  </PropertyGroup>

  <!-- Default values -->
  <PropertyGroup>
    <LangVersion>9.0</LangVersion>

    <StrongNameKeyId>AlexNoddingsQuibble</StrongNameKeyId>

    <RepoRoot>$(MSBuildThisFileDirectory)</RepoRoot>
    <RepositoryUrl>https://github.com/alexnoddings/quibble</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <!-- The SPDX name for the source license. See https://spdx.org/licenses/. -->
    <PackageLicenseExpression>MIT</PackageLicenseExpression>

    <!-- Enables Strict mode for Roslyn compiler -->
    <Features>strict</Features>
  </PropertyGroup>

  <!-- Default package versions -->
  <PropertyGroup>
    <!-- Targets -->
    <DefaultTargetFramework>net5.0</DefaultTargetFramework>
    <!-- Misc -->
    <AspNetCoreVersion>5.0.0-rc.2.20475.17</AspNetCoreVersion>
    <AspNetCoreWebAssemblyVersion>5.0.0-rc.2.20475.17</AspNetCoreWebAssemblyVersion>
    <BlazoriseVersion>0.9.2-preview9</BlazoriseVersion>
    <EntityFrameworkCoreVersion> 5.0.0-rc.2.20475.6</EntityFrameworkCoreVersion>
    <HttpExtensionsVersion>5.0.0-rc.2.20475.5</HttpExtensionsVersion>
    <HttpJsonVersion>5.0.0-rc.2.20475.5</HttpJsonVersion>
    <!-- Analysers -->
    <FxCopAnalyzersVersion>3.3.0</FxCopAnalyzersVersion>
    <ThreadingAnalyzersVersion>16.7.56</ThreadingAnalyzersVersion>
    <SonarAnalyzersVersion>8.13.0.21683</SonarAnalyzersVersion>
    <!-- Testing -->
    <TestSdkVersion>16.8.0-preview-20200921-01</TestSdkVersion>
    <xUnitVersion>2.4.1</xUnitVersion>
    <xUnitRunnerVersion>2.4.3</xUnitRunnerVersion>
    <CoverletCollectorVersion>1.3.0</CoverletCollectorVersion>
  </PropertyGroup>

  <!-- Project conventions -->
  <PropertyGroup>
    <RepoRelativeProjectDir>$([MSBuild]::MakeRelative($(RepoRoot), $(MSBuildProjectDirectory)))</RepoRelativeProjectDir>

    <IsReferenceAssemblyProject>false</IsReferenceAssemblyProject>

    <IsUnitTestProject>false</IsUnitTestProject>
    <IsUnitTestProject Condition="$(MSBuildProjectName.EndsWith('Tests'))">true</IsUnitTestProject>

    <IsStableBuild>false</IsStableBuild>
    <IsStableBuild Condition=" '$(Configuration)' == 'Release' ">true</IsStableBuild>

    <IncludeSymbols>true</IncludeSymbols>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
  </PropertyGroup>

  <!-- Warnings and errors -->
  <PropertyGroup>
    <Nullable>enable</Nullable>

    <!-- Warnings to ignore and not surface. -->
    <NoWarn>
      $(NoWarn);
      <!-- Web server exceptions do not need to be localised. -->
      CA1303;
      <!-- ConfigureAwait is not useful on ASP.NET Core -->
      CA2007; RCS1090;
      <!-- Explicit initialisation with a default value can improve readability -->
      CA1805;
    </NoWarn>

    <!-- Warnings to ignore and not surface during development. -->
    <NoWarn Condition=" '$(Configuration)' == 'Debug' ">
      $(NoWarn);
      <!-- Missing XML docs can hide up meaningful warnings during development -->
      CS1591;
    </NoWarn>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>

    <!-- Warnings to not treat as errors but still surface. -->
    <WarningsNotAsErrors>
      $(WarningsNotAsErrors);
      <!-- Don't make missing XML docs a fatal build error. -->
      CS1591;
      <!-- Don't make marking a method as async without performing an await a fatal build error as it makes some methods more consistent and easier to read. -->
      CS1998;
      <!-- Don't make explicit initialisation to a default value an error; it can improve readability of code. -->
      CA1805;
    </WarningsNotAsErrors>

    <!-- Warnings to not treat as errors but still surface during development. -->
    <WarningsNotAsErrors Condition=" '$(Configuration)' == 'Debug' ">
      $(WarningsNotAsErrors);
      <!-- Commenting out code while developing shouldn't cause an error. -->
      S125;
      <!-- Having to clean up using directives can be a drag while testing. -->
      S1128;
      <!-- Unused local variables can be useful when debugging. -->
      S1481;
    </WarningsNotAsErrors>
  </PropertyGroup>

  <!-- Targets -->
  <PropertyGroup>
    <TargetOsName Condition=" '$(TargetOsName)' == '' AND $([MSBuild]::IsOSPlatform('Windows'))">win</TargetOsName>
    <TargetOsName Condition=" '$(TargetOsName)' == '' AND $([MSBuild]::IsOSPlatform('OSX'))">osx</TargetOsName>
    <TargetOsName Condition=" '$(TargetOsName)' == '' AND $([MSBuild]::IsOSPlatform('Linux'))">linux</TargetOsName>
    <TargetArchitecture Condition="'$(TargetArchitecture)' == ''">x64</TargetArchitecture>
    <TargetRuntimeIdentifier Condition="'$(TargetRuntimeIdentifier)' == ''">$(TargetOsName)-$(TargetArchitecture)</TargetRuntimeIdentifier>
  </PropertyGroup>

  <!--
      Identity scaffolding does not work on net5 as of writing.
      temporarily reverting back major versions should allow for the scaffolder to run through to completion
    -->
  <!--
  <PropertyGroup>
    <DefaultTargetFramework>netcoreapp3.1</DefaultTargetFramework>
    <AspNetCoreVersion>3.1.7</AspNetCoreVersion>
    <AspNetCoreWebAssemblyVersion>3.2.0</AspNetCoreWebAssemblyVersion>
    <EntityFrameworkCoreVersion>3.1.7</EntityFrameworkCoreVersion>
  </PropertyGroup>
    -->

</Project>