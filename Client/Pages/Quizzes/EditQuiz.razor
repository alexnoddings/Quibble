@page "/quiz/{Id:guid}/edit"
@using Quibble.Client.Hubs
@inject NavigationManager NavigationManager
@inject IAccessTokenProvider AccessTokenProvider
@inject QuizHubConnection QuizHubConnection
@inject RoundHubConnection RoundHubConnection
@inject QuestionHubConnection QuestionHubConnection

@if (Quiz == null)
{
    <span>loading</span>
}
else
{
    <div class="mx-auto col-12 mb-5">
        <div class="card my-2">
            <div class="card-body">
                <div class="form-group my-0">
                    <div class="form-row">
                        <div class="col-2 d-flex align-items-center">
                            <ActionButton class="btn btn-block btn-info" Action="PublishQuizAsync">
                                <span class="oi oi-share-boxed"></span>
                                <span>Publish</span>
                            </ActionButton>
                        </div>
                        <div class="col-8">
                            <UpdateEventInput Placeholder="Quiz Title" @bind-Value="Quiz.Title" OnValueChanged="UpdateQuizAsync" FireEvent="UpdateEvent.OnInput" />
                        </div>
                        <div class="col-2 d-flex align-items-center">
                            <ActionButton Class="btn btn-block btn-danger" Action="DeleteQuizAsync">
                                <span class="oi oi-trash mx-2"></span>
                                <span>Delete Quiz</span>
                            </ActionButton>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        @{
            int roundCount = 0;
            foreach (var round in Quiz.Rounds)
            {
                roundCount++;
                <div class="card my-2">
                    <div class="card-body">
                        <div class="form-group">
                            <div class="form-row">
                                <div class="col-1">
                                    @roundCount
                                </div>
                                <div class="col-9">
                                    <UpdateEventInput Placeholder="Round Title" @bind-Value="round.Title" OnValueChanged="async () => await UpdateRoundAsync(round)" FireEvent="UpdateEvent.OnInput" />
                                </div>
                                <div class="col-2 d-flex align-items-center">
                                    <ActionButton class="btn btn-block btn-danger" Action="async () => await DeleteRoundAsync(round)">
                                        <span class="oi oi-trash mx-2"></span>
                                        <span>Delete Round</span>
                                    </ActionButton>
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            @{
                                int questionCount = 0;
                                foreach (var question in round.Questions)
                                {
                                    questionCount++;
                                    <div class="form-row">
                                        <div class="col-1">
                                            @roundCount&period;@questionCount
                                        </div>
                                        <div class="col-6">
                                            <UpdateEventInput Placeholder="Question Body" @bind-Value="question.Body" OnValueChanged="async () => await UpdateQuestionAsync(question)" FireEvent="UpdateEvent.OnInput" />
                                        </div>
                                        <div class="col-3">
                                            <UpdateEventInput Placeholder="Question Answer" @bind-Value="question.Answer" OnValueChanged="async () => await UpdateQuestionAsync(question)" FireEvent="UpdateEvent.OnInput" />
                                        </div>
                                        <div class="col-2">
                                            <ActionButton class="btn btn-block btn-danger" Action="async () => await DeleteQuestionAsync(round, question)">
                                                <span class="oi oi-trash"></span>
                                                <span>Delete Question</span>
                                            </ActionButton>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                        <div class="row">
                            <div class="offset-4 col-4">
                                <div class="row">
                                    <div class="col">
                                        <ActionButton class="btn btn-block btn-info mt-2" Action="async () => await CreateQuestionAsync(round)">
                                            Add question
                                        </ActionButton>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
        <div class="row mt-2 mb-5">
            <div class="offset-4 col-4">
                <div class="row">
                    <div class="col">
                        <ActionButton class="btn btn-block btn-info" Action="CreateRoundAsync">
                            Add round
                        </ActionButton>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
