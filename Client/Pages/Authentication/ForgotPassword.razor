@page "/auth/forgotPassword"
@using BlazorIdentityBase.Client.Services
@using BlazorIdentityBase.Shared.Authentication

<h2>Forgot Password</h2>

@if (Errors != null)
{
    <div class="alert alert-danger" role="alert">
        @foreach (var error in Errors)
        {
            <p>@error</p>
        }
    </div>
}

@if (WasSuccessful)
{
    <h1>Please check your email for a password reset link.</h1>
}
else
{
    <EditForm Model="Model" OnValidSubmit="ForgotPasswordAsync" class="card card-body bg-light my-4">
        <DataAnnotationsValidator />
        <div class="form-group row">
            <label for="email" class="col-md-2 col-form-label">
                Email
            </label>
            <div class="col-md-10">
                <InputText id="email" class="form-control" @bind-Value="Model.Email" type="email" autocomplete="email" />
                <ValidationMessage For="() => Model.Email" />
            </div>
        </div>
        <div class="row">
            <div class="col-md-12 text-right">
                <button type="submit" class="btn btn-primary btn-block" disabled="@IsSubmitting">
                    Send Reset Link
                </button>
            </div>
        </div>
    </EditForm>
}

@code
{
    [Inject]
    public IdentityAuthenticationStateProvider AuthenticationProvider { get; set; }

    private class ForgotPasswordModel : ForgotPasswordRequest
    {
    }

    private ForgotPasswordModel Model { get; } = new();

    private IList<string>? Errors { get; set; }

    private bool WasSuccessful { get; set; } = false;

    private bool IsSubmitting { get; set; }

    private async Task ForgotPasswordAsync()
    {
        IsSubmitting = true;

        var result = await AuthenticationProvider.ForgotPasswordAsync(Model.Email);
        if (result.WasSuccessful)
            WasSuccessful = true;
        else
            Errors = result.Errors?.ToList() ?? new List<string>();

        IsSubmitting = false;
    }
}
