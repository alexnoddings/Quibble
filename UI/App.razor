@using Quibble.UI.Core.Services
@inject ILoginHandler LoginHandler
@inject IAppMetadata AppMetadata
@inject NavigationManager NavigationManager

<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly" AdditionalAssemblies="@AppMetadata.GetAdditionalUIAssemblies()">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    @if (!context?.User?.Identity?.IsAuthenticated ?? false)
                    {
                        NavigationManager.NavigateTo(LoginHandler.LoginUrl, forceLoad: true);
                    }
                    else
                    {
                        <p>You are not authorized to access this resource.</p>
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(MainLayout)">
                <p>Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>